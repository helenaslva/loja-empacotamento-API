// <auto-generated />
using System;
using LojaEmpacotamentoApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LojaEmpacotamentoApi.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250528213812_first-migration")]
    partial class firstmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.Caixa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("AlturaCm")
                        .HasColumnType("real");

                    b.Property<float>("ComprimentoCm")
                        .HasColumnType("real");

                    b.Property<float>("LarguraCm")
                        .HasColumnType("real");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("PesoMaxKg")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Caixa", (string)null);
                });

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.CaixaProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PedidoCaixaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoCaixaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("CaixaProduto", (string)null);
                });

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.PedidoCaixa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CaixaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoCaixa", (string)null);
                });

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.PedidoProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoProduto", (string)null);
                });

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("AlturaCm")
                        .HasColumnType("real");

                    b.Property<float>("ComprimentoCm")
                        .HasColumnType("real");

                    b.Property<float>("LarguraCm")
                        .HasColumnType("real");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("PesoKg")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.CaixaProduto", b =>
                {
                    b.HasOne("LojaEmpacotamentoApi.Entities.PedidoCaixa", "PedidoCaixa")
                        .WithMany("Produtos")
                        .HasForeignKey("PedidoCaixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaEmpacotamentoApi.Entities.Produto", "Produto")
                        .WithMany("CaixaProdutos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoCaixa");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.PedidoCaixa", b =>
                {
                    b.HasOne("LojaEmpacotamentoApi.Entities.Caixa", "Caixa")
                        .WithMany("Pedidos")
                        .HasForeignKey("CaixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaEmpacotamentoApi.Entities.Pedido", "Pedido")
                        .WithMany("Caixas")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caixa");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.PedidoProduto", b =>
                {
                    b.HasOne("LojaEmpacotamentoApi.Entities.Pedido", "Pedido")
                        .WithMany("Produtos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaEmpacotamentoApi.Entities.Produto", "Produto")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.Caixa", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.Pedido", b =>
                {
                    b.Navigation("Caixas");

                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.PedidoCaixa", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("LojaEmpacotamentoApi.Entities.Produto", b =>
                {
                    b.Navigation("CaixaProdutos");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
